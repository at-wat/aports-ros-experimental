pkgname=ros-kinetic-rviz
_pkgname=rviz
pkgver=1.12.17
pkgrel=0
pkgdesc="$_pkgname package for ROS kinetic"
url="http://ros.org/wiki/rviz"
arch="all"
license="BSD"
depends="ros-kinetic-std-msgs ros-kinetic-rospy ros-kinetic-rosconsole ros-kinetic-urdf ros-kinetic-geometry-msgs ros-kinetic-media-export yaml-cpp-dev mesa-dev ros-kinetic-laser-geometry ros-kinetic-interactive-markers ros-kinetic-sensor-msgs ros-kinetic-image-transport ros-kinetic-roslib ros-kinetic-python-qt-binding eigen-dev ros-kinetic-resource-retriever ros-kinetic-roscpp ros-kinetic-visualization-msgs urdfdom_headers ros-kinetic-rosbag ros-kinetic-pluginlib>=1.11.2 assimp-dev ros-kinetic-message-filters ros-kinetic-std-srvs ogre-dev ros-kinetic-map-msgs ros-kinetic-tf ros-kinetic-nav-msgs qt5-qtbase-dev tinyxml-dev ros-kinetic-std-msgs ros-kinetic-rospy ros-kinetic-rosconsole ros-kinetic-urdf ros-kinetic-geometry-msgs ros-kinetic-media-export yaml-cpp-dev mesa-dev ros-kinetic-laser-geometry ros-kinetic-interactive-markers ros-kinetic-sensor-msgs ros-kinetic-image-transport ros-kinetic-roslib ros-kinetic-python-qt-binding eigen-dev ros-kinetic-resource-retriever ros-kinetic-roscpp ros-kinetic-visualization-msgs urdfdom_headers ros-kinetic-rosbag ros-kinetic-pluginlib>=1.11.2 assimp-dev ros-kinetic-message-filters ros-kinetic-std-srvs ogre-dev ros-kinetic-map-msgs ros-kinetic-tf ros-kinetic-nav-msgs qt5-qtbase-dev tinyxml-dev"
makedepends="py-setuptools py-rosdep py-rosinstall py-rosinstall-generator py-wstool chrpath ros-kinetic-cmake-modules ros-kinetic-std-msgs ros-kinetic-rospy ros-kinetic-rosconsole ros-kinetic-urdf ros-kinetic-geometry-msgs yaml-cpp-dev mesa-dev ros-kinetic-laser-geometry ros-kinetic-interactive-markers ros-kinetic-sensor-msgs ros-kinetic-image-transport ros-kinetic-roslib ros-kinetic-python-qt-binding eigen-dev ros-kinetic-resource-retriever ros-kinetic-roscpp ros-kinetic-catkin ros-kinetic-visualization-msgs urdfdom_headers ros-kinetic-rosbag ros-kinetic-pluginlib>=1.11.2 assimp-dev ros-kinetic-message-filters ros-kinetic-std-srvs ogre-dev ros-kinetic-map-msgs ros-kinetic-tf ros-kinetic-nav-msgs qt5-qtbase-dev tinyxml-dev"
subpackages="$pkgname-dbg"
source=""
builddir="$startdir/apk-build-temporary"
srcdir="/tmp/dummy-src-dir"
buildlog="$builddir/ros-abuild-build.log"
checklog="$builddir/ros-abuild-check.log"
statuslog="$builddir/ros-abuild-status.log"
if [ x${GENERATE_BUILD_LOGS} != "xyes" ]; then
  buildlog="/dev/null"
  checklog="/dev/null"
  statuslog="/dev/null"
fi
rosinstall="- git: {local-name: rviz, uri: 'https://github.com/ros-gbp/rviz-release.git', version: release/kinetic/rviz/1.12.17-0}
"
prepare() {
  set -o pipefail
  mkdir -p $builddir
  echo "preparing" > $statuslog
  cd "$builddir"
  rm -rf src || true
  mkdir -p src
  echo "$rosinstall" > pkg.rosinstall
  wstool init --shallow src pkg.rosinstall
  find $startdir -maxdepth 1 -name "*.patch" | while read patchfile; do
    echo "Applying $patchfile"
    (cd src/* && patch -p1 -i $patchfile)
  done
}
build() {
  set -o pipefail
  echo "building" > $statuslog
  cd "$builddir"
  source /usr/ros/kinetic/setup.sh
  catkin_make_isolated \
    -DCMAKE_BUILD_TYPE=RelWithDebInfo 2>&1 | tee $buildlog
}
check() {
  if [ -f $startdir/NOCHECK ]; then
    echo "Check skipped" | tee $checklog
    return 0
  fi
  set -o pipefail
  echo "checking" >> $statuslog
  cd "$builddir"
  source /usr/ros/kinetic/setup.sh
  source devel_isolated/setup.sh
  catkin_make_isolated -DCMAKE_BUILD_TYPE=RelWithDebInfo \
    --catkin-make-args run_tests 2>&1 | tee $checklog
  catkin_test_results 2>&1 | tee $checklog
}
dbg() {
  mkdir -p "$subpkgdir"
  default_dbg
}
package() {
  echo "packaging" >> $statuslog
  mkdir -p "$pkgdir"
  cd "$builddir"
  export DESTDIR="$pkgdir"
  source /usr/ros/kinetic/setup.sh
  catkin_make_isolated -DCMAKE_BUILD_TYPE=RelWithDebInfo --install-space /usr/ros/kinetic
  catkin_make_isolated -DCMAKE_BUILD_TYPE=RelWithDebInfo --install --install-space /usr/ros/kinetic
  rm "$pkgdir"/usr/ros/kinetic/setup.* "$pkgdir"/usr/ros/kinetic/.rosinstall "$pkgdir"/usr/ros/kinetic/_setup_util.py "$pkgdir"/usr/ros/kinetic/env.sh "$pkgdir"/usr/ros/kinetic/.catkin
  find $pkgdir -name "*.so" | while read so; do
    chrpath_out=$(chrpath ${so} || true)
    if echo ${chrpath_out} | grep -q "RPATH="; then
      rpath=$(echo -n "${chrpath_out}" | sed -e "s/^.*RPATH=//")
      if echo "${rpath}" | grep -q home; then
        echo "RPATH contains home!: ${rpath}"
        rpathfix=$(echo -n "${rpath}" | tr ":" "\n" \
          | grep -v -e home | tr "\n" ":" | sed -e "s/:$//; s/::/:/;")
        echo "Fixing to ${rpathfix}"
        chrpath -r ${rpathfix} ${so} || (echo chrpath failed; false)
      fi
    fi
  done
  echo "finished" >> $statuslog
}