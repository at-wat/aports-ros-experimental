pkgname=ros-kinetic-kdl-parser
_pkgname=kdl_parser
pkgver=1.12.11
pkgrel=0
pkgdesc="$_pkgname package for ROS kinetic"
url="http://ros.org/wiki/kdl_parser"
arch="all"
license="BSD"
depends="ros-kinetic-rosconsole tinyxml-dev ros-kinetic-urdf ros-kinetic-orocos-kdl urdfdom_headers tinyxml-dev ros-kinetic-urdf ros-kinetic-orocos-kdl"
makedepends="py-setuptools py-rosdep py-rosinstall py-rosinstall-generator py-wstool ros-kinetic-catkin ros-kinetic-cmake-modules urdfdom_headers ros-kinetic-rosconsole tinyxml-dev ros-kinetic-urdf ros-kinetic-orocos-kdl ros-kinetic-roscpp ros-kinetic-rostest"
subpackages=""
source=""
builddir="$startdir/apk-build-temporary"
srcdir="/tmp/dummy-src-dir"
buildlog="$builddir/ros-abuild-build.log"
checklog="$builddir/ros-abuild-check.log"
statuslog="$builddir/ros-abuild-status.log"
if [ x${GENERATE_BUILD_LOGS} != "xyes" ]; then
  buildlog="/dev/null"
  checklog="/dev/null"
  statuslog="/dev/null"
fi
rosinstall="- git: {local-name: kdl_parser, uri: 'https://github.com/ros-gbp/kdl_parser-release.git',
    version: release/kinetic/kdl_parser/1.12.11-0}
"
build() {
  set -o pipefail
  mkdir -p $builddir
  echo "building" > $statuslog
  cd "$builddir"
  rm -rf src || true
  mkdir -p src
  echo "$rosinstall" > pkg.rosinstall
  wstool init --shallow src pkg.rosinstall
  source /usr/ros/kinetic/setup.sh
  catkin_make_isolated -DCMAKE_BUILD_TYPE=Release 2>&1 | tee $buildlog
}
check() {
  if [ -f $startdir/NOCHECK ]; then
    echo "Check skipped" | tee $checklog
    return 0
  fi
  set -o pipefail
  echo "checking" >> $statuslog
  cd "$builddir"
  source /usr/ros/kinetic/setup.sh
  source devel_isolated/setup.sh
  catkin_make_isolated -DCMAKE_BUILD_TYPE=Release \
    --catkin-make-args run_tests 2>&1 | tee $checklog
  catkin_test_results 2>&1 | tee $checklog
}
package() {
  echo "packaging" >> $statuslog
  mkdir -p "$pkgdir"
  cd "$builddir"
  export DESTDIR="$pkgdir"
  source /usr/ros/kinetic/setup.sh
  catkin_make_isolated -DCMAKE_BUILD_TYPE=Release --install-space /usr/ros/kinetic
  catkin_make_isolated -DCMAKE_BUILD_TYPE=Release --install --install-space /usr/ros/kinetic
  rm "$pkgdir"/usr/ros/kinetic/setup.* "$pkgdir"/usr/ros/kinetic/.rosinstall "$pkgdir"/usr/ros/kinetic/_setup_util.py "$pkgdir"/usr/ros/kinetic/env.sh "$pkgdir"/usr/ros/kinetic/.catkin
  echo "finished" >> $statuslog
}
